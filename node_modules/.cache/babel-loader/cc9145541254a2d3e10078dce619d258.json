{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\apple\\\\Desktop\\\\724\\\\Debuggez-une-application-React.JS\\\\src\\\\contexts\\\\DataContext\\\\index.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport PropTypes from \"prop-types\";\nimport { createContext, useCallback, useContext, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataContext = /*#__PURE__*/createContext({});\nexport const api = {\n  loadData: async () => {\n    const json = await fetch(\"/events.json\");\n    return json.json();\n  }\n};\nexport const DataProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [error, setError] = useState(null);\n  const [data, setData] = useState(null);\n  const [last, setLast] = useState(null);\n  const getData = useCallback(async () => {\n    try {\n      setData(await api.loadData());\n      const sortedEvents = loadData.events.sort((a, b) => {});\n      setLast;\n    } catch (err) {\n      setError(err);\n    }\n  }, []);\n  useEffect(() => {\n    if (data) return;\n    getData();\n  });\n  return /*#__PURE__*/_jsxDEV(DataContext.Provider, {\n    // eslint-disable-next-line react/jsx-no-constructed-context-values\n    value: {\n      data,\n      error,\n      last,\n      setLast\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DataProvider, \"dd4EFWvvGRgfj15kTs7wY84irrI=\");\n\n_c = DataProvider;\nDataProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport const useData = () => {\n  _s2();\n\n  return useContext(DataContext);\n};\n\n_s2(useData, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport default DataContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataProvider\");","map":{"version":3,"sources":["C:/Users/apple/Desktop/724/Debuggez-une-application-React.JS/src/contexts/DataContext/index.js"],"names":["PropTypes","createContext","useCallback","useContext","useEffect","useState","DataContext","api","loadData","json","fetch","DataProvider","children","error","setError","data","setData","last","setLast","getData","sortedEvents","events","sort","a","b","err","propTypes","node","isRequired","useData"],"mappings":";;;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SACEC,aADF,EAEEC,WAFF,EAGEC,UAHF,EAIEC,SAJF,EAKEC,QALF,QAMO,OANP;;AAQA,MAAMC,WAAW,gBAAGL,aAAa,CAAC,EAAD,CAAjC;AAEA,OAAO,MAAMM,GAAG,GAAG;AACjBC,EAAAA,QAAQ,EAAE,YAAY;AACpB,UAAMC,IAAI,GAAG,MAAMC,KAAK,CAAC,cAAD,CAAxB;AACA,WAAOD,IAAI,CAACA,IAAL,EAAP;AACD;AAJgB,CAAZ;AAOP,OAAO,MAAME,YAAY,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAC5C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAMc,OAAO,GAAGjB,WAAW,CAAC,YAAY;AACtC,QAAI;AACFc,MAAAA,OAAO,CAAC,MAAMT,GAAG,CAACC,QAAJ,EAAP,CAAP;AACA,YAAMY,YAAY,GAAGZ,QAAQ,CAACa,MAAT,CAAgBC,IAAhB,CAAqB,CAACC,CAAD,EAAIC,CAAJ,KAAU,CAEnD,CAFoB,CAArB;AAGAN,MAAAA,OAAO;AACR,KAND,CAME,OAAOO,GAAP,EAAY;AACZX,MAAAA,QAAQ,CAACW,GAAD,CAAR;AACD;AACF,GAV0B,EAUxB,EAVwB,CAA3B;AAWArB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIW,IAAJ,EAAU;AACVI,IAAAA,OAAO;AACR,GAHQ,CAAT;AAKA,sBACE,QAAC,WAAD,CAAa,QAAb;AACE;AACA,IAAA,KAAK,EAAE;AACLJ,MAAAA,IADK;AAELF,MAAAA,KAFK;AAGLI,MAAAA,IAHK;AAILC,MAAAA;AAJK,KAFT;AAAA,cASGN;AATH;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAjCM;;GAAMD,Y;;KAAAA,Y;AAmCbA,YAAY,CAACe,SAAb,GAAyB;AACvBd,EAAAA,QAAQ,EAAEZ,SAAS,CAAC2B,IAAV,CAAeC;AADF,CAAzB;AAIA,OAAO,MAAMC,OAAO,GAAG;AAAA;;AAAA,SAAM1B,UAAU,CAACG,WAAD,CAAhB;AAAA,CAAhB;;IAAMuB,O;;AAEb,eAAevB,WAAf","sourcesContent":["import PropTypes from \"prop-types\";\r\nimport {\r\n  createContext,\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useState,\r\n} from \"react\";\r\n\r\nconst DataContext = createContext({});\r\n\r\nexport const api = {\r\n  loadData: async () => {\r\n    const json = await fetch(\"/events.json\");\r\n    return json.json();\r\n  },\r\n};\r\n\r\nexport const DataProvider = ({ children }) => {\r\n  const [error, setError] = useState(null);\r\n  const [data, setData] = useState(null);\r\n  const [last, setLast] = useState(null);\r\n  const getData = useCallback(async () => {\r\n    try {\r\n      setData(await api.loadData());\r\n      const sortedEvents = loadData.events.sort((a, b) => {\r\n        \r\n      })\r\n      setLast\r\n    } catch (err) {\r\n      setError(err);\r\n    }\r\n  }, []);\r\n  useEffect(() => {\r\n    if (data) return;\r\n    getData();\r\n  });\r\n  \r\n  return (\r\n    <DataContext.Provider\r\n      // eslint-disable-next-line react/jsx-no-constructed-context-values\r\n      value={{\r\n        data,\r\n        error,\r\n        last,\r\n        setLast\r\n      }}\r\n    >\r\n      {children}\r\n    </DataContext.Provider>\r\n  );\r\n};\r\n\r\nDataProvider.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport const useData = () => useContext(DataContext);\r\n\r\nexport default DataContext;\r\n"]},"metadata":{},"sourceType":"module"}